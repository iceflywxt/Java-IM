/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AddContact.java
 *
 * Created on 8.6.2010, 19:17:45
 */
package JIM.client;
import java.awt.Color;
import java.io.StringReader;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.InputSource;
import javax.swing.DefaultListModel;
import java.util.ArrayList;
/**
 *
 * @author cypher
 */
public class AddContact extends javax.swing.JDialog {
    private ArrayList<Contact> searchResult = new ArrayList<Contact>(); //výsledek vyhledávání
    /** Creates new form AddContact */
    public AddContact(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        query = new javax.swing.JTextField();
        search = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        result = new javax.swing.JList();
        add = new javax.swing.JButton();
        notice = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Najít kontakt");

        search.setText("Hledat:");
        search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchMouseClicked(evt);
            }
        });

        result.setModel(new DefaultListModel());
        result.setCellRenderer(new ContactsRenderer());
        result.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                resultValueChanged(evt);
            }
        });
        result.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                resultFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(result);

        add.setText("Přidat do seznamu kontaktů");
        add.setEnabled(false);
        add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                    .addComponent(notice, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(search)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(query, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(add, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(search)
                    .addComponent(query, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(notice, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(add)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * pokusi se najit kontakt podle hledaneho retezce,
     * zobrazi vysledek
     * @param evt
     */
    private void searchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchMouseClicked

        String q = query.getText();
        if (q.length() > 0) {
            try
            {
            TCPConnection c = TCPConnection.getInstance();
            Auth a = Auth.getInstance();
            String res = c.send("<msg type='search' recipient='"+a.getUsername()+"' query='" + q + "' />");

            InputSource is = new InputSource();
            is.setCharacterStream(new StringReader(res));
            DocumentBuilderFactory df = DocumentBuilderFactory.newInstance();
            DocumentBuilder db = df.newDocumentBuilder();
            Document d;
            Node root;
            d = db.parse(is);
            root = d.getDocumentElement();
            root.normalize();
            Element el = (Element)root;
            NodeList contacts = (NodeList)el.getElementsByTagName("contact");
            
            Element con;
            Contact contact;

            int count = 0;

            for(int i = 0; i < contacts.getLength(); i++)
            {
                con = (Element)contacts.item(i);
                contact = new Contact(con.getAttribute("username"), con.getAttribute("name"), con.getAttribute("surname"));
                contact.setState(con.getAttribute("state"));
                if(!contactAlreadyOnClist(contact))
                {
                    searchResult.add(contact);
                    count++;
                }
            }

            Contact[] output = new Contact[count];
            
            for(int i = 0; i < count; i++) output[i] = searchResult.get(i);

            this.result.setModel(new DefaultListModel());
            this.result.setListData(output);

            if(count > 0) {
                notice.setForeground(Color.GREEN);
                notice.setText("Nalezeno "+count+" uživatelů.");
            }
            else
            {
                notice.setForeground(Color.RED);
                notice.setText("Nebyl nalezen žádný uživatel.");
            }

            }catch(Exception e){}
        }

        add.setEnabled(false);
    }//GEN-LAST:event_searchMouseClicked

    private void resultValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_resultValueChanged
        add.setEnabled(true);
    }//GEN-LAST:event_resultValueChanged

    private void addMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addMouseClicked
        TCPConnection c = TCPConnection.getInstance();
        Contact contact = searchResult.get(result.getSelectedIndex());
        c.addContact(contact);
        c.send("<msg type='contact-added' recipient='"+contact.getUsername()+"' from='"+Auth.getInstance().getUsername()+"' />");
        Main.refreshContacts();
        dispose();
    }//GEN-LAST:event_addMouseClicked

    private void resultFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_resultFocusLost
        add.setEnabled(false);
    }//GEN-LAST:event_resultFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                AddContact dialog = new AddContact(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    /**
     * hleda jestli se kontakt uz nachazi v seznamu kontaktu
     * @param contact hledany kontakt
     * @return bool
     */
    private boolean contactAlreadyOnClist(Contact contact)
    {
        ArrayList<Contact> clist = TCPConnection.getInstance().getContacts();
        Contact c = null;
        Boolean found = false;
        int i = 0;

        while(i < clist.size())
        {
            c = clist.get(i);
            if(c.getUsername().toLowerCase().equals(contact.getUsername().toLowerCase()))
            {
                found = true;
                break;
            }
            i++;
        }


        return found;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel notice;
    private javax.swing.JTextField query;
    private javax.swing.JList result;
    private javax.swing.JButton search;
    // End of variables declaration//GEN-END:variables
}
